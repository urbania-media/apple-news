{
    "name": "Format\\Byline",
    "description": " The component for adding contributor credits, especially for articles with multiple contributors.",
    "version": "1.7+",
    "deprecated": false,
    "from_class": null,
    "extends": "Format\\Text",
    "typed": null,
    "url": "https:\/\/developer.apple.com\/tutorials\/data\/documentation\/apple_news\/byline.json",
    "properties": [
        {
            "name": "role",
            "type": "string",
            "required": true,
            "description": "Always byline for this component.",
            "value": "byline",
            "read_only": true,
            "typed": false
        },
        {
            "name": "text",
            "type": "string",
            "required": true,
            "description": "The text to display in the article, including any formatting tags depending on the format property. \nYou can also use a subset of HTML tags or Markdown syntax by setting format to html or markdown, respectively. See . Alternatively, you can style ranges of text individually using the  object.",
            "typed": false
        },
        {
            "name": "additions",
            "type": "array:Format\\Addition",
            "required": false,
            "description": "An array of all the additions that should be applied to ranges of the component's text.\nAdditions are ignored when format is set to html or markdown.",
            "typed": false
        },
        {
            "name": "anchor",
            "type": "Format\\Anchor",
            "required": false,
            "description": "An object that defines vertical alignment with another component.",
            "typed": false
        },
        {
            "name": "animation",
            "type": [
                "Format\\ComponentAnimation",
                "none"
            ],
            "required": false,
            "description": "An object that defines an animation to be applied to the component.\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": true
        },
        {
            "name": "behavior",
            "type": [
                "Format\\Behavior",
                "none"
            ],
            "required": false,
            "description": "An object that defines behavior for a component, like  or .\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": true
        },
        {
            "name": "conditional",
            "type": [
                "Format\\ConditionalText",
                "array:Format\\ConditionalText"
            ],
            "required": false,
            "description": "An instance or array of text components that can be applied conditionally, and the conditions that cause them to be applied.",
            "typed": false
        },
        {
            "name": "format",
            "type": "enum:string",
            "required": false,
            "description": "The formatting or markup method applied to the text. \nIf format is set to html or markdown, neither Additions nor InlineTextStyles are supported.",
            "default": "none",
            "enum_values": [
                "markdown",
                "html",
                "none"
            ],
            "typed": false
        },
        {
            "name": "hidden",
            "type": "boolean",
            "required": false,
            "description": "A Boolean value that determines whether the component is hidden.",
            "default": true,
            "typed": false
        },
        {
            "name": "identifier",
            "type": "string",
            "required": false,
            "description": "An optional unique identifier for this component. If used, this identifier must be unique across the entire document. You will need an identifier for your component if you want to anchor other components to it.",
            "typed": false
        },
        {
            "name": "inlineTextStyles",
            "type": [
                "array:Format\\InlineTextStyle",
                "none"
            ],
            "required": false,
            "description": "An array of InlineTextStyle objects that you can use to apply different text styles to ranges of text. For each InlineTextStyle, you should supply a rangeStart, rangeLength, and either a TextStyle object or the identifier of a TextStyle that is defined at the top level of the document.\nInline text styles are ignored when format is set to markdown or html.\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": false
        },
        {
            "name": "layout",
            "type": [
                "Format\\ComponentLayout",
                "string"
            ],
            "required": false,
            "description": "An inline ComponentLayout object that contains layout information, or a string reference to a ComponentLayout that is defined at the top level of the document. \nIf layout is not defined, size and position are be based on various factors, such as the device type, the length of the content, and the role of this component.",
            "typed": false
        },
        {
            "name": "style",
            "type": [
                "Format\\ComponentStyle",
                "string",
                "none"
            ],
            "required": false,
            "description": "An inline ComponentStyle object that defines the appearance of this component, or a string reference to a ComponentStyle object that is defined at the top level of the document.\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": false
        },
        {
            "name": "textStyle",
            "type": [
                "Format\\ComponentTextStyle",
                "string"
            ],
            "required": false,
            "description": "An inline ComponentTextStyle object that contains styling information, or a string reference to a ComponentTextStyle object that is defined at the top level of the document.",
            "typed": false
        }
    ]
}
{
    "name": "Format\\FlexibleSpacer",
    "description": "The component for redistributing empty space inside a horizontal stack collection.",
    "version": "1.9+",
    "deprecated": false,
    "from_class": null,
    "extends": "Format\\Component",
    "typed": null,
    "url": "https:\/\/developer.apple.com\/tutorials\/data\/documentation\/apple_news\/flexiblespacer.json",
    "properties": [
        {
            "name": "role",
            "type": "string",
            "required": true,
            "description": "Always spacer for this object.",
            "value": "spacer",
            "read_only": true,
            "typed": false
        },
        {
            "name": "anchor",
            "type": "Format\\Anchor",
            "required": false,
            "description": "An object that defines vertical alignment with another component.",
            "typed": false
        },
        {
            "name": "animation",
            "type": [
                "Format\\ComponentAnimation",
                "none"
            ],
            "required": false,
            "description": "An object that defines an animation to be applied to the component.\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": true
        },
        {
            "name": "behavior",
            "type": [
                "Format\\Behavior",
                "none"
            ],
            "required": false,
            "description": "An object that defines behavior for a component, like  or .\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": true
        },
        {
            "name": "conditional",
            "type": [
                "Format\\ConditionalComponent",
                "array:Format\\ConditionalComponent"
            ],
            "required": false,
            "description": "An instance or array of component properties that can be applied conditionally, and the conditions that cause them to be applied.",
            "typed": false
        },
        {
            "name": "hidden",
            "type": "boolean",
            "required": false,
            "description": "A Boolean value that determines whether the component is hidden.",
            "default": true,
            "typed": false
        },
        {
            "name": "identifier",
            "type": "string",
            "required": false,
            "description": "An optional unique identifier for this component. If used, this identifier must be unique across the entire document. You will need an identifier for your component if you want to anchor other components to it. ",
            "typed": false
        },
        {
            "name": "layout",
            "type": [
                "Format\\ComponentLayout",
                "string"
            ],
            "required": false,
            "description": "An inline ComponentLayout object that contains layout information, or a string reference to a ComponentLayout object that is defined at the top level of the document. \nThe width of the spacer is determined automatically based on any remaining horizontal space, and the height is that of the parent container. Any top or bottom margins specified on a spacer component's layout decreases the height of the layout within the parent container.\nAll properties of ComponentLayout object are supported except minimumHeight and minimumWidth.",
            "typed": false
        },
        {
            "name": "style",
            "type": [
                "Format\\ComponentStyle",
                "string",
                "none"
            ],
            "required": false,
            "description": "An inline ComponentStyle object that defines the appearance of this component, or a string reference to a ComponentStyle object that is defined at the top level of the document.\nThe none value is used for conditional design elements. Adding it here has no effect.",
            "typed": false
        }
    ]
}